My React project 

npx create-react-app my-app
cd my-app
npm start

using joi validation 


Part 1: JOI Schema Validator
JOI is a schema description language and data validator for JavaScript. It is used to validate data based on criteria created by the user. This is especially useful if there is a need to validate form inputs. In this example, the JOI validator will be used to validate user inputs in a form.

In order to use JOI together with React, the following packages needs to be installed:

npm install joi joi-browser
Run the starter to code to see a simple data entry form rendered in React:

npm start
Open the source code for the SimpleForm component and integrate JOI functions:

// components/SimpleForm.js
...
import Joi from 'joi-browser';

const schema = {
  name: Joi.string().min(1).max(20).required(),
  email: Joi.string().email().required(),
  age: Joi.number().min(1).max(100).required(),
}
The JOI schema is constructed using provided types and constraints. Refer to the JOI documentation for details of the schema definition.

The next step is to validate the input values against the scheme. In order to get the name of the field to be validated, the computed property value can be used for both the object to compare and sub schema:

// components/SimpleForm.js
  const validate = (event) => {
    const {name, value} = event.target;
    const objToCompare = {[name]: value};
    const subSchema ={[name]: schema[name]};

    const result = Joi.validate(objToCompare, subSchema);
    const {error} = result;
    return error ? error.details[0].message : null;
  }

  const handlerOnSubmit = (event) => {
    event.preventDefault();
    const result = Joi.validate(user, schema, {abortEarly: false});
    ...
  }
